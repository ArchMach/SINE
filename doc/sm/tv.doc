
^Dset_buffer_mark: Sets the mark for this buffer to the location
of the cursor.

^Dbeginning_of_line: Moves the cursor to the beginning of the
current line.

^Dback_char: Moves the cursor back one character.  With an
argument it backs up that many characters.

^Dillegal_command: This function is invoked by all unused commands.

^Ddelete_char: Deletes the next character in the buffer.  If
passed an argument deletes that many characters.

^Dend_of_line: Moves the cursor to the end of the current line.

^Dforward_char: Moves the cursor one character to the right.  If
given an argument moves that many characters right.

^Dabort: This function is called to abort the current invocation
of the reader.  Good for getting out of the echo area.

^Ddo_tab: Inserts a tab (9.) into the buffer.

^Dcr_tab: Inserts a <cr> and a <tab>

^Dkill_line: Deletes the current line not including the carriage
return.  If the line is empty then the carriage return will be
deleted.  The deleted text is saved on the kill stack.

^Dfull_redisplay: Causes the entire screen to be recentered and
refreshed.  If on a printing terminal, prints <argument> lines on
each side of the current line and indicates the cursor.

^Ddo_cr: Inserts a carriage return (13.) into the buffer.

^Dnext_line_command: (under the control of emacs_type_np)
<default> Moves the cursor to the beginning of the next line.
<other>   Moves the cursor down one line and as nearly as possible in
the same horizontal position.

^Dopen_line: Inserts a carriage return after the cursor.  It is
equivalent to <cr> C-B.

^Dprevious_line_command: (under the control of emacs_type_np)
<default> Moves the cursor to the beginning of the previous line.
<other>   Moves the cursor up one line and as nearly as possible in
the same horizontal position.

^Dquote_next_character: This reads one character from the
terminal and inserts it verbatum into the buffer.  This is how
you insert control characters into a file.

^Dreverse_string_search: Reads a string from the echo area
terminated by and altmode (<esc>) and moves the cursor to the
beginning of the first occurance of the string between the
cursor and the beginning of the buffer.  With an argument
searches for that many occurances.

^Dstring_search: Reads a string from the echo area terminated by
and altmode (<esc>) and moves the cursor to the end of the first
occurance of the string between the cursor and the end of the
buffer.  With an argument searches for that many occurances.

^Dtwiddle_chars: (under the control of emacs_type_t)
<default> Interchanges the characters adjoining the cursor.
Places the cursor after the second character.  If you are at
the end of a line (or buffer), the two previous characters
are interchanged instead.
<other>   Interchanges the two preceeding characters.

^Dget_multiplier: This function is used to suppy numeric
arguments to other functions.  It stores the argument if the
variable "argument".  If no number is supplied then 4 is the
default.  ^U^U make the argument be 4*4 or 16.  ^U342 make
the argument 342.  See?

^Dnext_page: Moves the cursor down one half a screen full. An
argument moves down argument/2 screens. This is approximately
argument*11/2 lines.  Affected by the setting of emacs_type_np.

^Dkill_point_to_mark: This deletes all the text between the cursor
and the mark for this buffer.  The killed text is saved on the
kill stack.

^Dyank_last_kill: Inserts the top item on the kill stack into the
buffer before the cursor.

^Dread_line_yank: Inserts in the echo buffer the last thing
that you typed in.  Its work is independent of the kill stack.

^Dprint_mode_line: Prints the mode line containing much random
information on your console.  (printing terminals only)

^Drubout_char: Deletes the character to the left of the cursor. 
With an argument it deletes that many characters.

^Dself_insert: Inserts the character typed.  That character is
found in the global variable "char".

^Dself_insert_break: Calls all the functions on the list in the
variable "token_hackers".  It then inserts itself.

^Dlist_buffers: Prints out a list of all buffers and some usefull
information about each.  From left to right: buffer name,
whether the buffer needs writing out, the length, the major
mode, and the filename associated with the buffer.

^Dreturn_from_reader: This function causes the reader to return
to its caller.  Normally this gets you out of TV but if you are
in the echo area it is equivilant to typing the terminator.

^Dfind_file_command: Reads a filename from the echo area and
reads the file into a buffer whose name is derived from the
filename.  It will prompt you for another buffer if the buffer
it picks is not empty.  A response to this question of ^G means
don't read the file in, and a response of carriage return means
read the file into this buffer anyway.

^Dget_file: Reads a filename from the echo area and reads the
file into the current buffer.

^Dsave_buffer: Writes the current buffer to the current filename.

^Dput_file: Reads a filename from the echo area and writes the
current buffer to that file.

^Dswitch_point_and_mark: Exchanges the positions of the cursor
and the mark for the current buffer.

^Dprint_buffer: Prints all of the current buffer on the screen. 
When it gets to the bottom of the screen it stops and prints
"--more--".  A space means continue printing and anything else
means stop printing and fix up the screen.  The characters are
all ignored.

^Dset_indent_column: set the indent column to argument

^Dprint_current_position: prints the location of the point, the length
of the buffer, the percentage distance through the buffer, the horizontal
position of the point (which column its in), and the location of the mark

^Dswitch_buffers: Reads a buffer name from the echo area and
makes that the current buffer.  If no such buffer exists it will
be created.  If no name is supplied the last buffer you were in
is reentered.  This is good for switching back and forth between
two oft used buffers.

^Dset_fill_width: sets fill_width to the argument if one is given, otherwise
it uses the horizontal position of the point

^Dset_major_mode: Reads a mode name from the echo area and makes
that the major mode for the current buffer.

^Dadd_minor_mode: Reads a mode name from the echo area and adds
that to the list of minor modes for this buffer.

^Dback_s_expr: Moves the cursor to the beginning of the
parenthesised just to the left of the cursor.  If the previous
non-white space character is not a ")" then the cursor is moved
back one word.

^Ddelete_s_expr: Deletes the parentesised list following the
cursor.  If the next non-white space character is not a "(" then
the next word is deleted.    The deleted text is saved on the
kill stack.

^Dforward_s_expr: Moves the cursor past the next parentesised
list.  If the next non-white space character is not a "(" then
the cursor is moved past the next word.

^Dload_function: Reads a filename from the echo area, appends
".sine" and fasloads it.  All the functions defined in the file
are defined in the current sine environment.

^Decho_line_cr: Prints a fresh copy of the current line and inserts
a <cr>.  (printing terminals only)

^Drubout_s_expr: Deletes the previous parentesised list.  If the
previous character is not a ")" then the previous word is
deleted.  The deleted text is saved on the kill stack.

^Dditto: copy the word in the corresponding position of the previous
line to the point.  An argument means to copy that many consecutive words

^Dtop_of_buffer: Moves the cursor to the beginning of the buffer.

^Dbottom_of_buffer: Moves the cursor to the end of the buffer.

^Dback_sentence: move to the beginning of the sentence

^Dback_word: Moves the cursor to the left of the previous word.

^Dtty_back_word: Moves backward a word and print it backwards.

^Dcapitalize_word: capitalize the first character of the following word

^Ddelete_word: Deletes the word to the left of the cursor.  The
deleted text is saved on the kill stack.

^Dforward_sentence: move to the end of the sentence

^Dforward_word: Moves the cursor to the right of the next word.

^Dtty_forward_word: Moves forward a word and prints it normally.

^Dlower_case_word: lowercase the following word

^Dset_point_paragraph: set the point and the mark around the current
paragraph

^Dfill_paragraph: make each line of the current paragraph as long as
possible without exceeding the fill_width

^Dcenter_line: center the current line on a line of length fill_width

^Dtwiddle_word: (under the control of emacs_type_t)
<default> Interchanges the surrounding words.  The point is left after
the second word.
<other>   Interchanges the two preceeding words.

^Dupper_case_word: uppercase the following word

^Dprevious_page: Moves the cursor up one half a screen full. An
argument moves up argument/2 screens. This is approximately
argument*11/2 lines.  Affected by the setting of emacs_type_np.

^Dcall_function: Reads a function name from the echo area and
calls it.  If the function is not defined, it will attempt to
autoload from >sl1>sm>(name).sine.

^Dyank_previous_kill: Deletes the text between the cursor and the
mark and THROWS IT AWAY.  It then throws away the top item on
the kill stack and inserts the new top of the kill stack into
the buffer.  WARNING: this is a vary dangerous command unless
the previous command was a "yank_last_kill".  In this case it
can be used to get the things not on the top of the kill stack.
You have been warned.

^Dback_paragraph: move to the beginning of the current paragraph

^Ddelete_whitespace: delete tabs and blanks around the point

^Dforward_paragraph: move to the end of the current paragraph

^Drubout_word: Deletes the word to the left of the cursor.  The
deleted text is saved on the kill stack. 

^Dauto_load_rest: When this function is executed, the rest of the
functions that are defined for TVmacs are autoloaded and the
command that was typed is then executed.
^L